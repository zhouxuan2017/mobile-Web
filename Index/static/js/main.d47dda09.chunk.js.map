{"version":3,"sources":["ShowTime.js","Todolist/Todoing.js","Todolist/Todoinput.js","Todolist/Todolist.js","Request.js","Context/Context.js","Context/Child.js","Context/Parent.js","Hoc/Hoc.js","Portal/Portals.js","Portal/ParentPortal.js","Sider.js","App.js","index.js"],"names":["ShowTime","props","handleClick","num","e","console","log","state","time","Date","toLocaleString","bind","word","setTimeout","setState","onClick","ev","this","divClick","Component","Todoing","a","className","todo","map","item","idx","key","delTodo","defaultProps","Todoinput","handleInput","keyCode","addTodo","target","value","handleChange","name","parseInt","n1","n2","htmlFor","style","color","fontSize","id","onChange","onKeyDown","Todolist","addItem","msg","delItem","splice","b","Object","keys","forEach","Request","data","fetch","method","body","then","res","json","result","index","album_title","author","con","React","createContext","Child","context","contextType","Parent","url","hoc","Com","title","A","displayName","getDisplayName","Music","Music1","Mymusic","Mymusic1","Hoc","Portals","cli","ReactDOM","createPortal","children","document","ParentPortal","Sider","float","width","to","App","type","path","component","exact","render","Provider","getElementById"],"mappings":"uMAKuBA,E,YAEnB,WAAYC,GAAO,IAAD,8BACd,4CAAMA,KA+BVC,YAAY,SAACC,EAAIC,GACbC,QAAQC,IAAR,gBACAD,QAAQC,IAAIH,EAAIC,GAChBC,QAAQC,IAAI,6BAjCf,EAAKC,MAAM,CACHC,MAAK,IAAIC,MAAOC,kBAOzB,EAAKR,YAAY,EAAKA,YAAYS,KAAjB,gBACjBN,QAAQC,IAAI,eACZD,QAAQC,IAAI,aAAa,EAAKL,MAAMW,MAZlB,E,iFAcE,IAAD,OACfP,QAAQC,IAAI,qBACZO,YAAW,WACP,EAAKC,SAAS,CACVN,MAAK,IAAIC,MAAOC,qBAExB,O,8CAIA,OAAO,I,gDAGPL,QAAQC,IAAI,gB,2CAGZD,QAAQC,IAAI,e,+BAOPH,EAAIC,GACTC,QAAQC,IAAIH,EAAIC,K,+BAEX,IAAD,OAOJ,OANAC,QAAQC,IAAI,UAQZ,kBAAC,WAAD,KACK,yBAAKS,QAAS,SAACC,GAAD,OAAM,EAAKd,YAAY,EAAEc,KAAMC,KAAKV,MAAMC,MACxD,yBAAKO,QAAS,WACVV,QAAQC,IAAI,KACZW,KAAKV,MAAMC,MAChB,yBAAKO,QAASE,KAAKC,SAASP,KAAKM,KAAK,MAAtC,QAAkDA,KAAKhB,MAAMW,W,GAxDjCO,a,QCAnBC,E,iLAEP,IAAD,OACL,OACI,6BACI,uDAASH,KAAKhB,MAAMoB,GACpB,wBAAIC,UAAU,QAGXL,KAAKhB,MAAMsB,KAAKC,KAAI,SAACC,EAAKC,GAAN,OAAY,wBAAIC,IAAKD,GAAMD,EAAf,QAAyB,4BAAQV,QAAS,kBAAI,EAAKd,MAAM2B,QAAQF,KAAxC,0B,GATvCP,aAmBrCC,EAAQS,aAAa,CACjBN,KAAK,CAAC,EAAE,EAAE,GACVF,EAAE,K,YCQeS,E,YACjB,aAAc,IAAD,8BACV,+CAMHC,YAAY,SAAC3B,GACM,KAAZA,EAAE4B,SACF,EAAK/B,MAAMgC,QAAQ7B,EAAE8B,OAAOC,QATtB,EAabC,aAAa,SAAChC,GAEV,EAAKU,SAAL,eACKV,EAAE8B,OAAOG,KAAMC,SAA0B,KAAjBlC,EAAE8B,OAAOC,MAAW,EAAE/B,EAAE8B,OAAOC,UAd7D,EAAK5B,MAAM,CACPgC,GAAG,EACHC,GAAG,GAJG,E,sEAmBH,IAAD,OACL,OACI,6BAEI,2BAAOC,QAAQ,MAAMC,MAAO,CAACC,MAAM1B,KAAKV,MAAMgC,GAAGtB,KAAKV,MAAMiC,GAAG,GAAG,MAAM,QAAQI,SAAS,KAAzF,sBACA,2BAAOC,GAAG,MAAMR,KAAK,KAAKS,SAAU,SAAC1C,GAAD,OAAK,EAAKgC,aAAahC,IAAI2C,UAAW,SAAC3C,GAAD,OAAK,EAAK2B,YAAY3B,IAAI+B,MAAOlB,KAAKV,MAAMgC,KAH1H,IAII,2BAAOF,KAAK,KAAKS,SAAU,SAAC1C,GAAD,OAAK,EAAKgC,aAAahC,IAAK2C,UAAW,SAAC3C,GAAD,OAAK,EAAK2B,YAAY3B,IAAI+B,MAAOlB,KAAKV,MAAMiC,KAJlH,IAKI,gDAAOvB,KAAKV,MAAMgC,GAAGtB,KAAKV,MAAMiC,S,GA3BTrB,aC9BlB6B,E,YACjB,aAAc,IAAD,uBACT,+CAmCJC,QAAQ,SAACC,GACL,EAAKpC,SAAS,CACVS,KAAK,GAAD,mBAAK,EAAKhB,MAAMgB,MAAhB,CAAqB2B,MAE7B7C,QAAQC,IAAI4C,IAxCH,EA0CdC,QAAQ,SAAC9B,GAIL,IAAIE,EAAK,YAAI,EAAKhB,MAAMgB,OACpBA,EAAK,EAAKhB,MAAMgB,MACf6B,OAAO/B,EAAE,GACb,EAAKP,SAAS,CACVS,KAAKA,IAETlB,QAAQC,IAAIe,GAGV,EAAKP,SACH,CAACS,UAtDL,EAAKhB,MAAM,CACPgB,KAAK,CAAC,EAAE,EAAE,IAqBd,IAAIF,EAAE,CAACA,EAAE,IAAIgC,EAAE,KAOf,IAAI,IAAI5B,KANR6B,OAAOC,KAAKlC,GAAGmC,SAAQ,SAAC/B,GACpBpB,QAAQC,IAAImB,GACZpB,QAAQC,IAAIe,EAAEI,OAIFJ,EAEZhB,QAAQC,IAAIe,GAjCP,S,sEA4DT,OACI,6BAEI,kBAAC,EAAD,CAAWY,QAAShB,KAAKgC,UACzB,kBAAC,EAAD,CAASrB,QAASX,KAAKkC,QAAS5B,KAAMN,KAAKV,MAAMgB,Y,GAjE3BJ,aCDjBsC,G,mBACjB,aAAc,IAAD,8BACT,+CACKlD,MAAM,CACPmD,KAAK,IAHA,E,iFAMO,IAAD,OAYfC,MAAM,sDAAsD,CAACC,OAAO,OAAOC,KAAK,eAC5EC,MAAK,SAACC,GACH,OAAOA,EAAIC,UAEdF,MAAK,SAACC,GACH,EAAKjD,SAAS,CACV4C,KAAKK,EAAIE,c,+BAMpB,OACI,6BACI,wDACA,4BACKhD,KAAKV,MAAMmD,KAAKlC,KACb,SAACC,EAAKyC,GAAN,OACI,wBAAIvC,IAAKuC,GACL,4BAAKzC,EAAK0C,aACV,2BAAI1C,EAAK2C,kB,GAvCJjD,cCAxBkD,EAAIC,IAAMC,gBCCFC,GDAHF,IAAMC,gB,iLCEhB,OADMlE,QAAQC,IAAIW,MAEd,6BACI,uCACA,6BAAMA,KAAKwD,c,GALQtD,cAgBnCqD,EAAME,YAAYL,E,ICjBGM,E,iLAEb,OACI,6BACI,kBAAC,EAAD,W,GAJoBxD,aCDhCyD,EAAI,sDAER,SAASC,EAAIC,EAAIF,EAAIG,GAAM,IAEpBC,EAFoB,YAGnB,aAAc,IAAD,8BACT,+CACKzE,MAAQ,CACTmD,KAAM,IAHD,EAHM,iFAUD,IAAD,OACbC,MAAMiB,GACLd,MAAK,SAACC,GACH,OAAOA,EAAIC,UAEdF,MAAK,SAACC,GACH,EAAKjD,SAAS,CACV4C,KAAMK,EAAIE,cAjBH,+BAsBlB,OAAQ,6BACA,4BAAKc,GACN,kBAACD,EAAD,iBAAS7D,KAAKhB,MAAd,CAAqByD,KAAMzC,KAAKV,MAAMmD,aAxB3B,GAEVvC,aA8Bb,OADA6D,EAAEC,YAAF,YAGJ,SAAyBH,GACrB,OAAOA,EAAIG,aAAaH,EAAIzC,MAAM,YAJf6C,CAAeJ,GAAlC,KACOE,E,IAKLG,E,iLAEE,OAAO,4BACH,6BAAMlE,KAAKhB,MAAMoC,MAEbpB,KAAKhB,MAAMyD,KAAKlC,KAAI,SAACC,EAAKyC,GACtB,OAAO,wBAAIvC,IAAKuC,GAAO,0BAAMxB,MAAO,CAACC,MAAM,YAApB,SAAkCuB,EAAM,EAAxC,sBAAqDzC,EAAKsD,e,GANjF5D,aAadiE,E,iLAEE,OAAO,4BAECnE,KAAKhB,MAAMyD,KAAKlC,KAAI,SAACC,EAAKyC,GACtB,OACI,6BACG,uBAAGvC,IAAKuC,EAAOxB,MAAO,CAACC,MAAM,SAA7B,cAAkDuB,EAAM,EAAxD,SAA4DzC,EAAKsD,OAChE,uBAAGpD,IAAKuC,GAAR,qBAAmBzC,EAAK2C,iB,GAR/BjD,aAkBjBkE,EAAQR,EAAIM,EAAMP,EAAI,sBACtBU,EAAST,EAAIO,EAAOR,EAAI,sBAEPW,E,iLAEb,OACI,6BACI,kBAACF,EAAD,CAAShD,KAAK,gBADlB,IAEI,kBAACiD,EAAD,W,GALiBnE,aCxEZqE,E,2MACjBC,IAAI,WACApF,QAAQC,IAAI,U,wEAGZ,OACIoF,IAASC,aAEL,6BAEI,yBAAK5E,QAASE,KAAKwE,KAAMxE,KAAKhB,MAAM2F,WAExCC,SAAShC,U,GAZY1C,aCEhB2E,E,2MACjBL,IAAI,WACApF,QAAQC,IAAI,gB,wEAIZ,OADAD,QAAQC,IAAIW,MAER,yBAAKF,QAASE,KAAKwE,KACf,kBAAC,EAAD,KACA,4CACA,4CAEA,kBAAC,EAAD,KACA,kD,GAb0BtE,a,gBCFrB4E,E,iLAEb,OACI,wBAAIrD,MAAO,CAACsD,MAAM,OAAOC,MAAM,UAC1B,gCAAK,kBAAC,IAAD,CAAMC,GAAG,QAAT,QACL,4BAAI,kBAAC,IAAD,CAAMA,GAAG,YAAT,YACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,kBAAT,kBACJ,gCAAK,kBAAC,IAAD,CAAMA,GAAG,KAAT,aACL,4BAAI,kBAAC,IAAD,CAAMA,GAAG,aAAT,aACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,aAAT,cACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,WAAT,gB,GAVc/E,a,SCgBdgF,E,iLAEb,OACG,kBAAC,IAAD,KACI,6BAEI,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAQC,KAAK,WAAb,WACA,yBAAK1D,MAAO,CAACsD,MAAM,OAAOC,MAAM,UAChC,kBAAC,IAAD,CAAOI,KAAK,OAAOC,UAAWf,IAC9B,kBAAC,IAAD,CAAOc,KAAK,WAAWC,UAAW7C,IAClC,kBAAC,IAAD,CAAO4C,KAAK,iBAAiBC,UAAWR,IACxC,kBAAC,IAAD,CAAOO,KAAK,WAAWC,UAAWd,IAClC,kBAAC,IAAD,CAAOe,OAAK,EAACF,KAAK,IAAIC,UAAWtD,IACjC,kBAAC,IAAD,CAAOqD,KAAK,YAAYC,UAAWtG,IACnC,kBAAC,IAAD,CAAOqG,KAAK,YAAYC,UAAWtD,IACnC,kBAAC,IAAD,CAAOqD,KAAK,UAAUC,UAAW3B,W,GAhBnBxD,aCCjCuE,IAASc,OAAO,kBAACnC,EAAIoC,SAAL,CAActE,MADpB,OACkC,kBAAC,EAAD,OAAsB0D,SAASa,eAAe,U","file":"static/js/main.d47dda09.chunk.js","sourcesContent":["import React,{Component,Fragment} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n// class ShowTime extends Component  直接导出\r\nexport  default  class ShowTime extends Component{\r\n    //类  大部分都是方法\r\n    constructor(props){\r\n        super(props);\r\n     this.state={\r\n             time:new Date().toLocaleString()\r\n     }\r\n    //  setInterval(()=>{\r\n    //        this.setState({\r\n    //            time:new Date().toLocaleString()\r\n    //        })\r\n    //  },1000)\r\n    this.handleClick=this.handleClick.bind(this)\r\n    console.log('constructor')\r\n    console.log('construcor',this.props.word)\r\n    }\r\n    componentDidMount(){\r\n        console.log('componentDidMount')\r\n        setTimeout(()=>{\r\n            this.setState({\r\n                time:new Date().toLocaleString()\r\n            })\r\n      },1000)\r\n    }\r\n\r\n    shouldComponentUpdate(){\r\n        return true;\r\n    }\r\n    getSnapshotBeforeUpdate(){\r\n        console.log('getSnpshot');\r\n    }\r\n    componentDidUpdate(){\r\n        console.log('didupdate')\r\n    }\r\n    handleClick=(num,e)=>{\r\n        console.log(this);\r\n        console.log(num,e);\r\n        console.log('点击成功');\r\n    }\r\n    divClick(num,e){\r\n        console.log(num,e);\r\n    }\r\n    render(){\r\n        console.log('render')\r\n    //     setTimeout(()=>{\r\n    //         this.setState({\r\n    //             time:new Date().toLocaleString()\r\n    //         })\r\n    //   },1000)\r\n        return(\r\n            // 开头引入了所以可以不用写React.Fragment  直接写Fragment就可以\r\n        <Fragment>\r\n             <div onClick={(ev)=>this.handleClick(1,ev)}>{this.state.time}</div>\r\n             <div onClick={()=>{\r\n                 console.log(1);\r\n             }}>{this.state.time}</div>\r\n            <div onClick={this.divClick.bind(this,333)}>hello{this.props.word}</div>\r\n        </Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n//默认导出   default  只能导出一次\r\n//export default ShowTime;\r\n\r\n//命名导出   可以导出多个\r\nexport {ShowTime};\r\n\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\nexport default class Todoing extends Component {\r\n  \r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>正在进行{this.props.a}</h1>\r\n                <ul className=\"list\">\r\n                    {/* arr.forEach\\some\\every\\find\\map\\reduce\\ */}\r\n                    {\r\n                   this.props.todo.map((item,idx)=><li key={idx}>{item}-----<button onClick={()=>this.props.delTodo(idx)}>删除</button></li>)\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nTodoing.propTypes={\r\n    todo:PropTypes.array\r\n}\r\nTodoing.defaultProps={\r\n    todo:[2,3,4],\r\n    a:100\r\n}","import React, { Component } from 'react'\r\n//子组件--->父组件传递数据，调用子组件时往子组件传递一个函数\r\n//子组件通过props调用该函数往父组件传递（肯定带参数）\r\n\r\n\r\n//受控组件和非受控组件\r\n\r\n//非受控组件\r\n//代码简单、比较适用于一次性获取表单的值\r\n// export default class Todoinput extends Component{\r\n\r\n//     componentDidMount(){\r\n//        // console.log(this.refs);\r\n//        console.log(this.inp.value);\r\n//     }\r\n//     search=()=>{\r\n//         console.log(this.inp.value);\r\n//     }\r\n//     render(){\r\n//         return (<div>\r\n//             <input onChange={this.inp.value} ref={(inp)=>this.inp=inp} type='text'/>\r\n//             {/* <input ref='a' type=\"text\"/> */}\r\n//             <button onClick={this.search}>查询</button>\r\n//         </div>)\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n//受控组件：value值被react的状态控制\r\n//可以方便拿到input框的值、实时获取或处理输入的内容\r\nexport default class Todoinput extends Component {\r\n    constructor(){\r\n       super();\r\n       this.state={\r\n           n1:0,\r\n           n2:0\r\n       }\r\n    }\r\n    handleInput=(e)=>{\r\n        if(e.keyCode===13){\r\n           this.props.addTodo(e.target.value);\r\n        }\r\n        \r\n    }\r\n    handleChange=(e)=>{\r\n   \r\n        this.setState({\r\n            [e.target.name]:parseInt(e.target.value===''?0:e.target.value) //属性值变量加中括号   对象中括号里面加变量\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* <input onKeyDown={(e)=>this.handleInput(e)} type='text'/> */}\r\n                <label htmlFor='inp' style={{color:this.state.n1+this.state.n2>10?'red':'green',fontSize:20}}>输入：</label>\r\n                <input id=\"inp\" name=\"n1\" onChange={(e)=>this.handleChange(e)} onKeyDown={(e)=>this.handleInput(e)} value={this.state.n1}></input>+\r\n                <input name=\"n2\" onChange={(e)=>this.handleChange(e)}  onKeyDown={(e)=>this.handleInput(e)} value={this.state.n2}></input>=\r\n                <p>结果：{this.state.n1+this.state.n2}</p>\r\n                \r\n                {/* <p>结果：</p>\r\n                <button>查询</button> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Todoing from './Todoing';\r\nimport Todoinput from './Todoinput';\r\n\r\nexport default class Todolist extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            todo:[1,2,3]\r\n        }\r\n        // var arr=[1,2,{a:100}];\r\n        // var b=[...arr];\r\n        // var b=JSON.parse(JSON.stringify(arr));\r\n        // b[2].a=200;\r\n        // console.log(arr);\r\n      \r\n\r\n        //对象的拷贝\r\n         //var a={a:100};\r\n        // var b={b:200};\r\n        // var o=Object.assign(a,b);\r\n        // var o1=Object.assign({},a,b)\r\n        // console.log(o);\r\n        // console.log(o==a);//true\r\n        // console.log(o1==a);//false\r\n        // console.log(o1===a);//false\r\n          \r\n        //Object遍历一个对象\r\n        //Object.keys返回由属性名组成的一个数组\r\n        var a={a:100,b:200};\r\n        Object.keys(a).forEach((item)=>{\r\n            console.log(item);\r\n            console.log(a[item]);\r\n        })\r\n        \r\n        //遍历一个对象\r\n        for(var item in a)\r\n        {\r\n            console.log(a);\r\n        }\r\n    }\r\n    addItem=(msg)=>{\r\n        this.setState({\r\n            todo:[...this.state.todo,msg]\r\n        })\r\n        console.log(msg)\r\n    }\r\n   delItem=(a)=>{\r\n       //this.state.todo.splice(a,1);  不要写\r\n       //深拷贝、浅拷贝\r\n       //1.不要直接改变、处理状态\r\n       var todo=[...this.state.todo];\r\n       var todo=this.state.todo;\r\n       todo.splice(a,1);\r\n        this.setState({\r\n            todo:todo\r\n        })\r\n        console.log(a);\r\n        //2.setState是异步的\r\n        //this.setState((state,props)=>({todo:state.todo+1}))\r\n          this.setState(\r\n            {todo}\r\n        )\r\n   }\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n                <Todoinput addTodo={this.addItem}/>\r\n                <Todoing delTodo={this.delItem} todo={this.state.todo}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n               \r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport Axios from 'axios';\r\n\r\nexport default class Request extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            data:[]\r\n        }\r\n    }\r\n    componentDidMount(){\r\n    //     Axios.get('https://api.apiopen.top/musicRankingsDetails?type=1').then((res)=>{\r\n    //    console.log(res);\r\n    //    this.setState({\r\n    //        data:res.data.result\r\n    //    })\r\n\r\n    \r\n        //});\r\n\r\n\r\n        //进行fetch请求   fetch(url,{method:'post',body:'{name:111}'})\r\n        fetch('https://api.apiopen.top/musicRankingsDetails?type=1',{method:'post',body:'{name:111}'})\r\n           .then((res)=>{\r\n               return res.json();\r\n           })\r\n           .then((res)=>{\r\n               this.setState({\r\n                   data:res.result\r\n               })\r\n           })\r\n    }\r\n\r\n      render() {\r\n        return (\r\n            <div>\r\n                <h1>请求接口</h1>\r\n                <ul>\r\n                    {this.state.data.map(\r\n                        (item,index)=>(\r\n                            <li key={index}>\r\n                                <h2>{item.album_title}</h2>\r\n                                <p>{item.author}</p>\r\n                            </li>\r\n                        )\r\n                    )}\r\n                   \r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n//export const {Provider,Consumer}=React.createContext();\r\n\r\nexport const con=React.createContext();\r\nexport const con2=React.createContext();","import React, { Component } from 'react'\r\nimport  {con} from './Context';\r\n\r\n\r\nexport default class Child extends Component {\r\n    render() {console.log(this);\r\n        return (\r\n            <div>\r\n                <h1>Context</h1>\r\n                <div>{this.context}</div>\r\n                {/* <Consumer>\r\n                    <h1>Context</h1>\r\n                    {\r\n                        (data)=><div>{data}</div>\r\n                    }\r\n                </Consumer> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nChild.contextType=con;\r\n","import React, { Component } from 'react'\r\nimport Child from './Child'\r\n\r\nexport default class Parent extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Child/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nlet url='https://api.apiopen.top/musicRankingsDetails?type=1';\r\n//hoc接收一个组件\r\nfunction hoc(Com,url,title){\r\n  //声明为了return出来一个组件\r\n class A extends Component{\r\n        constructor(){\r\n            super();\r\n            this.state = {\r\n                data: []\r\n            }\r\n        };\r\n       \r\n      componentDidMount(){\r\n            fetch(url)\r\n            .then((res)=>{\r\n                return res.json();\r\n            })\r\n            .then((res)=>{\r\n                this.setState({\r\n                    data: res.result\r\n                })\r\n            })\r\n        }\r\n      render(){\r\n         return  <div>\r\n                 <h1>{title}</h1>\r\n                <Com {...this.props} data={this.state.data} />\r\n              </div>\r\n           \r\n        }\r\n    }\r\n   \r\n    //A.displayName='A('+getDisplayName(Com)+')'\r\n    A.displayName=`A(${getDisplayName(Com)})`;\r\n    return A;\r\n}\r\nfunction  getDisplayName(Com){\r\n    return Com.displayName||Com.name||'Component';\r\n}\r\nclass Music extends Component{\r\n    render(){\r\n        return <ul>\r\n            <div>{this.props.name}</div>\r\n            {\r\n                this.props.data.map((item,index)=>{\r\n                    return <li key={index}><span style={{color:'#FF1493'}}>第{index+1}首歌：</span>{item.title}</li>\r\n                })\r\n            }\r\n        </ul>\r\n    }\r\n}\r\n\r\nclass Music1 extends Component{\r\n    render(){\r\n        return <ul>\r\n            {\r\n                this.props.data.map((item,index)=>{\r\n                    return (\r\n                        <div>\r\n                           <p key={index} style={{color:'blue'}}>The  Number{index+1}：{item.title}</p>\r\n                            <p key={index}>作者：{item.author}</p>\r\n                        </div>\r\n                    \r\n                            )\r\n                           \r\n                })\r\n            }\r\n        </ul>\r\n    }\r\n}\r\nvar Mymusic=hoc(Music,url,'第一个');\r\nvar Mymusic1=hoc(Music1,url,'第二个');\r\n\r\nexport default class Hoc extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Mymusic name='hello world'/>;\r\n                <Mymusic1/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom';\r\n\r\nexport default class Portals extends Component {\r\n    cli=()=>{\r\n        console.log('dsfdf');\r\n    }\r\n    render() {\r\n        return (\r\n            ReactDOM.createPortal(\r\n           \r\n                <div>\r\n                    {/* <div>dsndsf</div> */}\r\n                    <div onClick={this.cli}>{this.props.children}</div>\r\n                </div>,\r\n                document.body\r\n             \r\n            )\r\n       \r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Portals from './Portals'\r\nimport { con } from '../Context/Context';\r\n\r\n\r\nexport default class ParentPortal extends Component {\r\n    cli=()=>{\r\n        console.log('dsfdfparent');\r\n    }\r\n    render() {\r\n        console.log(this);\r\n        return (\r\n            <div onClick={this.cli} >\r\n                <Portals>\r\n                <h2>你好</h2>\r\n                <h2>hello world</h2>\r\n                </Portals>\r\n                <Portals>\r\n                <li>音乐</li>\r\n                </Portals>\r\n            </div>\r\n        \r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class Sider extends Component {\r\n    render() {\r\n        return (\r\n            <ul style={{float:'left',width:'300px'}}>  \r\n                 <li> <Link to='/hoc'>Hoc</Link></li>\r\n                 <li><Link to='/request'>Request</Link></li>\r\n                 <li><Link to='/Parentportals'>Parentportals</Link></li>\r\n                 <li> <Link to='/'>Todolist</Link></li>\r\n                 <li><Link to='/showTime'>showTime</Link></li>\r\n                 <li><Link to='/todoList'>Todolist/</Link></li>\r\n                 <li><Link to='/Parent'>Parent</Link></li>\r\n                 \r\n                 \r\n                  \r\n            </ul>\r\n        )\r\n    }\r\n}\r\n","\r\nimport './index.css';\r\nimport {ShowTime} from './ShowTime';\r\nimport Todolist from './Todolist/Todolist'\r\nimport Request from './Request'\r\nimport Parent from './Context/Parent'\r\nimport Hoc from './Hoc/Hoc'\r\nimport Portals from'./Portal/Portals'\r\nimport ParentPortal from './Portal/ParentPortal'\r\nimport React, { Component } from 'react'\r\nimport {BrowserRouter as Router,Route} from 'react-router-dom';\r\nimport {Link} from 'react-router-dom';\r\nimport Sider from './Sider'\r\nimport {Button} from 'antd'\r\n//antd使用：\r\n//1.下载安装antd框架  ：npm i antd\r\n//2.在某个css里引入antd的css:@import '~antd/dist/antd.css';\r\n//3.在需要的组件内import相应的组件，然后使用\r\n\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n           <Router>\r\n               <div>\r\n                   {/* {Hoc}是引进来的不能随便写    path是路径可以随便写 */}\r\n                   <Sider/>\r\n                   <Button type='primary'>primary</Button>\r\n                   <div style={{float:'left',width:'600px'}}>\r\n                   <Route path='/hoc' component={Hoc}/>\r\n                   <Route path='/request' component={Request}/>\r\n                   <Route path='/Parentportals' component={ParentPortal}/>\r\n                   <Route path='/portals' component={Portals}></Route>\r\n                   <Route exact path='/' component={Todolist}/>\r\n                   <Route path='/showTime' component={ShowTime}/>\r\n                   <Route path='/todoList' component={Todolist}></Route>\r\n                   <Route path='/Parent' component={Parent}></Route>\r\n                   </div>\r\n               </div>\r\n           </Router>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {ShowTime} from './ShowTime';\nimport Todolist from './Todolist/Todolist'\nimport Request from './Request'\nimport Parent from './Context/Parent'\nimport Hoc from './Hoc/Hoc'\nimport Portals from'./Portal/Portals'\nimport ParentPortal from './Portal/ParentPortal'\nimport App from './App'\n\n\n// var str='hello';\n// var ele=<h1>{str}</h1>\n//ReactDOM.render(<Request/>,document.getElementById('root'));\n\n//App\nimport {con} from './Context/Context';\nlet color='red';\nReactDOM.render(<con.Provider value={color}><App/></con.Provider>,document.getElementById('root'));\n\n\n\n//ParentPortal\n// import {con} from './Context/Context';\n// let color='red';\n// ReactDOM.render(<con.Provider value={color}><ParentPortal/></con.Provider>,document.getElementById('root'));\n\n\n//Portals\n// import {con} from './Context/Context';\n// let color='red';\n// ReactDOM.render(<con.Provider value={color}><Portals/></con.Provider>,document.getElementById('root'));\n\n//Hoc\n\n// import {con} from './Context/Context';\n// let color='red';\n// ReactDOM.render(<con.Provider value={color}><Hoc/></con.Provider>,document.getElementById('root'));\n\n\n//Context\n////let {Provider,Consumer}=React.createContext();\n// import {con} from './Context/Context';\n// let color='red';\n// ReactDOM.render(<con.Provider value={color}><Parent/></con.Provider>,document.getElementById('root'));\n\n\n//ReactDOM.render(<Todolist/>,document.getElementById('root'));\n//组件交互\n//父组件--->子组件：调用时在子组件上添加属性\n//在子组件中通过props获取数据\n//ReactDOM.render(<ShowTime word=\"   react\"/>,document.getElementById('root'))\n//通过函数定义的组件（无生命周期函数）\n//当只是渲染结构时\n// function Todo(props){\n//     var e=<div>he</div>\n//     return(\n//         <div>\n//             {/* <h1>todo</h1> */}\n            \n//              {/* 条件渲染 */}\n//             {props.list.length>=6?<h1>todo</h1>:''}\n            \n//             {/* 短路操作  */}\n//             {props.list.length>=5&&<h1>todo</h1>}\n//             <ul>\n//                 {/* <li>{props.list}</li> */}\n//                 {/*循环渲染*/}\n               \n//                 {\n//                     //map方法生成一个数组   实现元素渲染\n//                     props.list.map((item,index)=>{\n//                         if(index%2===0){\n//                        return <li key={index}>{item}</li>}\n//                     })\n                    //    props.list.map(\n                    //        (item,index)=>index&2===0&&<li key={item}>{item}</li>\n                    //    )\n//                 }\n//             </ul>\n//         </div>\n//     )\n// }\n// //var item='hello';\n// var item=[1,2,3,4,5];\n// ReactDOM.render(<Todo list={item}/>,document.getElementById('root'));\n\n\n\n//类定义组件  Compoent是React对象里面的一个属性  有生命周期  比较大 类当中有很多用不到的属性和方法\n\n\n\n\n\n//函数定义组件   接收单一的props对象，返回一个React元素\n//props是只读的，组件名称必须以大写字母开头\n/*function Hello(props){\n    return <h1>Hello{props.name}</h1>\n}*/\n\n//ReactDOM.render(e,document.getElementById('root'));\n\n\n//react元素创建后不可改变\n/*function tick(){\n\n    var e=<div>\n           <p>当前时间</p>\n           <h1>{new Date().toLocaleString()}</h1></div>;\n    ReactDOM.render(e,document.getElementById('root'));\n}\ntick();\nsetInterval(tick,1000);*/\n\n\n\n//jsx表达式会被react转换成一个对象，类似下面声明的obj对象\n//var ele=React.createElement('div',{'id':'box'},'hello',React.createElement('h1',{'id':'h'},'react'))\n\n\n// var obj={type:'div',props:{\n//     id:'box',\n//     class:'box-box',\n//     children:['hello',{\n//         type:'h1',\n//         props:{\n//             id:'h',\n//             class:'h-h',\n//             children:['react']\n//         }\n//     }],\n// }}\n\n// var str='<h1>hello</h1>'+'';\n// ele.innerHTML=str;\n\n\n//注意以下性能问题及优化方法\n//加载html文件、浏览器解析html生成DOM树\n//link加载css文件，解析css对应的规则、和DOM树结合生成（渲染树）render tree、浏览器渲染render tree\n\n//页面回流（重排）：内容改变，大小改变、结构改变。display.width.height.font-size\n//页面重绘（把样式（字体颜色、背景颜色等）改一下，整体布局不动）页面回流一定引起页面重绘  页面重绘不一定引起页面回流\n\n//node.offfsetLeft、node.offfsetWidth()等慎用\n/*var root=document.getElementById('root');\nvar width=root.offsetWidth;\nsetInterval(function(){\n    width+=1;\n    root.style.width=width+'px';\n},100)*/\n\n//回流方式一display.width.height.font-size影响\n/*document.body.style.width='100px';\ndocument.body.style.height='100px';\n声明一个css的类\n.change{\n    width:100px;\n    height:100px;\n}\ndocument.body.className='change';*/\n\n\n//对节点的操作先用变量代替\n//回流方式二\n/*console.time('a');\nvar str='';\nfor(var i=0;i<1000;i++)\n{\n    str+='<li>'+i+'<li>';\n}\ndocument.body.innerHTML=str;\nconsole.timeEnd('a'); */\n\n//文档碎片的概念  自己声明render函数，实现页面渲染\n// function render(obj,container){\n//     var {type,props}=obj;\n//     //文档碎片\n//     var fr=document.createDocumentFragment();\n//     document.createDocumentFragment()\n//     var ele=document.createElement(type);\n//     for(var item in props){\n//         if(item==='class'){\n//             ele.className=props[item];\n//         }else if(item==='children'){\n//            for(var i=0;i<props[item].length;i++){\n//               if(typeof props[item][i]==='object'){\n//                   render(props[item][i],ele);\n//               }\n//               else{\n//                 var txt=document.createTextNode(props[item][i]);\n//                 ele.appendChild(txt);\n//               }\n//            }\n//         }else{\n//       ele[item]=props[item];\n//         }\n//     }\n//     fr.appendChild(ele);\n//     container.appendChild(fr);\n// }\n// render(obj,document.getElementById('root'));\n//var e=<h1>hello</h1>;转换成一个对象\n//ReactDOM.render(ele, document.getElementById('root'));\n\n"],"sourceRoot":""}